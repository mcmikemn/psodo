#cloud-config
merge_how:
 - name: list
   settings: [append]
 - name: dict
   settings: [no_replace, recurse_list]

write_files:
  - path: /opt/containers/templates/volumes/s3fs.sh.j2
    content: |
      #!/bin/sh
      set -e
      echo {{ s3fs.key }}:{{ s3fs.secret }} | sudo tee -a ${HOME}/.passwd-s3fs
      s3fs {{ s3fs.space-name }} /mnt/ps_assets -o passwd_file=${HOME}/.passwd-s3fs -o url=https://{{ s3fs.endpoint }}/ -o use_path_request_style
      echo {{ s3fs.space-name }} /mnt/ps_assets fuse.s3fs _netdev,allow_other,use_path_request_style,url=https://{{ s3fs.endpoint }}/ 0 0 >> /etc/fstab

write_files:
  - path: /opt/containers/templates/volumes/volumes_mount.sh.j2
    content: |
      #!/bin/sh
      set -e
      {% for v in volumes %}
        mkdir -p {{ v["mount"] }}
        mount -o discard,defaults /dev/disk/by-id/scsi-0DO_Volume_{{ v["name"] }} {{ v["mount"] }}
        echo /dev/disk/by-id/scsi-0DO_Volume_{{ v["name"] }} {{ v["mount"] }} {{ v["fs_type"] }} defaults,nofail,discard 0 0 | sudo tee -a /etc/fstab
      {% endfor %}

packages:
  - python3-pip
 
runcmd:
  ## install s3fs
  - apt install s3fs
  - pip3 install j2cli[yaml]
  ## render and execute s3fs.sh from template
  - j2 /opt/containers/templates/volumes/s3fs.sh.j2 /run/cloud-init/user-variables-sensitive/yaml | /bin/bash
  ## Render and execute the volumes_mount.sh from the template
  - j2 /opt/containers/templates/volumes/volumes_mount.sh.j2 /run/cloud-init/user-variables-sensitive.yaml | /bin/bash
